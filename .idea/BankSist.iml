import textwrap

#Boas vindas ao usúario do banco!
print('Bem-vindo(a) ao Pedrocoin $')

#"Tela" de Menu do banco
def menu():
    menu = """\n
    ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬ MENU ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
     [1]\tDepositar
     [2]\tSacar
     [3]\tExtrato
     [4]\tNovo Usuário
     [5]\tNova Conta
     [6]\tListar Contas
     [7]\tSair
   ¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬
    """
    return input(textwrap.dedent(menu))

#seção de deposito do programa
def depositar(saldo, valor, extrato,):
    if valor > 0:
        saldo += valor
        extrato += f'Depósito:\tR$ {valor:.2f}\n'
        print('\n¬¬¬ Depósito realizado comsucesso! ¬¬¬')
    else:
        print('\nXXX Operação falhou! O valor informado é inválido XXX')
    return  saldo, extrato

#seção de saque do programa
def sacar(*, saldo, valor, extrato, limite, numeros_de_saques, limites_de_saques):
    exedeu_saldo = valor > saldo
    exedeu_limite = valor >limite
    exedeu_saque = valor > numeros_de_saques >= limites_de_saques

    if exedeu_saldo:
        print('\nXXX Operação falhou! Você não possui saldo suficiênte. XXX')

    elif exedeu_limite:
        print('\nXXX Operação falhou! Valor do saque ecede o limite. XXX')

    elif exedeu_saque:
        print('\nXXX Operação falhou! Número maxido de saques excedido. XXX')

    elif valor > 0:
        saldo -= valor
        extrato += f'Saques:\t\tR$ {valor:.2f}\n'
        numeros_de_saques += 1
        print('\n¬¬¬ Saque realizado com sucesso! ¬¬¬')

    else:
        print('\nXXX Operação falhou! O valor informado é inválido. XXX')

    return saldo, extrato

#seção de exibição de extrato do programa
def exibir_extrato(saldo, *, extrato):
    print('\n¬¬¬¬¬¬¬¬EXTRATO¬¬¬¬¬¬¬¬')
    print('Não foram realizadas movimentações.' if not extrato else extrato)
    print(f'\nSaldo:\t\tR$ {saldo:.2f}')
    print('¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬')

#adicionar usuário ao bank
def criar_usuario(usuarios):
    cpf = input('Informe o CPF (somente números): ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('\nXXXJá exite usuário com esse CPF! XXX')
        return

    nome = input('Informe o nome completo:')
    data_nascimento = input('Informe da data de nascimento (DD-MM-AAAA): ')
    endereco = input('Informe o endereço (Lograudo, n°, bairro, cidade/sigla do estado): ')

    usuarios.append({'nome':nome, 'data_nascimento': data_nascimento, 'cpf': cpf, 'endereco': endereco})
    print('¬¬¬¬Usuário criado com sucesso ¬¬¬¬')

#Identificar usuário no bank
def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario['cpf'] == cpf]
    if len(usuarios_filtrados) > 0:
        return usuarios_filtrados[0]
    else:
        return None

#criar uma conta nova no bank
def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('Informe o CPF do usuário: ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('\n¬¬¬Conta criada com sucesso! ¬¬¬')
        return {'agencia': agencia, 'numero da conta': numero_conta, 'usuario': usuario}
    else:
        print('\nXXX Usuário não encontrado, criação de conta encerrada! XXX')
        return  None

#Lista de contas do bank
def listar_contas(contas):
    for conta in contas:
        linha = f'''\
                Agência:\t{conta['agencia']}
                C/C:\t\t{conta['numero_conta']}
                Titular:\t{conta['usuario']['nome']}
                '''
        print('=' * 100)
        print(textwrap.dedent(linha))

#definição de limites
def main():
    LIMITE_SAQUES = 3
    AGENCIA = '0001'

    saldo = 0
    limite = 1000000
    extrato = ''
    numero_saques = 0
    usuarios = []
    contas = []

#Opção de comandos para o usuário e seus detalhes
    while True:
        opcao = menu()

        if opcao == '1':
            valor = float(input('Informe o valor do depósito: '))
            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == '2':
            valor = float(input('Informe do saque: '))
            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numeros_de_saques=numero_saques,
                limites_de_saques=LIMITE_SAQUES
            )

        elif opcao == '3':
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == '4':
            criar_usuario(usuarios)

        elif opcao == '5':
            novo_numero_conta = len(contas) + 1
            cpf = input('Informe o CPF do Usuário: ')
            usuario_selecionado = filtrar_usuario(cpf, usuarios)

            if usuario_selecionado:
                nova_conta = criar_conta(AGENCIA, novo_numero_conta, usuario_selecionado)
                if nova_conta:
                    contas.append(nova_conta)
                else:
                    print('Usuario não encontrado')

        elif opcao == '6':
            listar_contas(contas)

        elif opcao == '7':
            break

        else:
            print('Operação invalida, por favor selecione novamente a operação  desejada')

main()
